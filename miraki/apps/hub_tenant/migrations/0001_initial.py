# Generated by Django 4.1.9 on 2023-06-20 06:01

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Area",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(db_index=True, default=datetime.datetime(2023, 6, 20, 11, 31, 0, 103469)),
                ),
                ("updated_at", models.DateTimeField(default=datetime.datetime(2023, 6, 20, 11, 31, 0, 103502))),
                ("name", models.CharField(max_length=100)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ConnectionInfo",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(db_index=True, default=datetime.datetime(2023, 6, 20, 11, 31, 0, 52038)),
                ),
                ("updated_at", models.DateTimeField(default=datetime.datetime(2023, 6, 20, 11, 31, 0, 52181))),
                ("ip_address", models.CharField(blank=True, max_length=100, null=True)),
                ("port", models.IntegerField(default=0)),
                ("connection_parameters", models.JSONField(default=dict)),
                ("mqtt_broker", models.CharField(blank=True, max_length=100, null=True)),
                ("mqtt_port", models.IntegerField(default=0)),
                ("mqtt_username", models.CharField(blank=True, max_length=100, null=True)),
                ("mqtt_password", models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Machine",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(db_index=True, default=datetime.datetime(2023, 6, 20, 11, 31, 0, 103469)),
                ),
                ("updated_at", models.DateTimeField(default=datetime.datetime(2023, 6, 20, 11, 31, 0, 103502))),
                ("name", models.CharField(max_length=100)),
                ("manufacturer", models.CharField(max_length=100)),
                ("model_number", models.CharField(max_length=100)),
                ("serial_number", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("installation_date", models.DateField(auto_now_add=True)),
                (
                    "machine_type",
                    models.CharField(
                        choices=[
                            ("PLC", "PLC"),
                            ("CNC", "CNC"),
                            ("Robot", "Robot"),
                            ("AGV", "AGV"),
                            ("Vision", "Vision"),
                            ("Edge Device", "Edge Device"),
                        ],
                        max_length=12,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Process",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(db_index=True, default=datetime.datetime(2023, 6, 20, 11, 31, 0, 103469)),
                ),
                ("updated_at", models.DateTimeField(default=datetime.datetime(2023, 6, 20, 11, 31, 0, 103502))),
                ("name", models.CharField(max_length=100)),
                (
                    "process_type",
                    models.CharField(
                        choices=[
                            ("PROCESS_MACHINING", "Process Or Machining"),
                            ("USER_QA_STATION", "User QA Station"),
                            ("VISION_STATION", "Vision Station"),
                        ],
                        default="PROCESS_MACHINING",
                        max_length=100,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Vision",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(db_index=True, default=datetime.datetime(2023, 6, 20, 11, 31, 0, 52038)),
                ),
                ("updated_at", models.DateTimeField(default=datetime.datetime(2023, 6, 20, 11, 31, 0, 52181))),
                ("machine", models.UUIDField(blank=True, null=True)),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "connection",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="hub_tenant.connectioninfo",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(db_index=True, default=datetime.datetime(2023, 6, 20, 11, 31, 0, 52038)),
                ),
                ("updated_at", models.DateTimeField(default=datetime.datetime(2023, 6, 20, 11, 31, 0, 52181))),
                ("name", models.CharField(max_length=300)),
                ("is_active", models.BooleanField(default=False)),
                ("is_admin", models.BooleanField(default=False)),
                ("email", models.EmailField(max_length=300, unique=True)),
                ("mobile", models.CharField(blank=True, max_length=20, null=True)),
                ("profile_img", models.ImageField(blank=True, null=True, upload_to="profile_img")),
                (
                    "user",
                    models.OneToOneField(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TagTopics",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(db_index=True, default=datetime.datetime(2023, 6, 20, 11, 31, 0, 103469)),
                ),
                ("updated_at", models.DateTimeField(default=datetime.datetime(2023, 6, 20, 11, 31, 0, 103502))),
                ("name", models.CharField(max_length=100)),
                ("topic", models.CharField(max_length=100)),
                ("value", models.CharField(max_length=100)),
                (
                    "admin_users",
                    models.ManyToManyField(
                        blank=True, related_name="%(class)s_allowed_users", to="hub_tenant.userprofile"
                    ),
                ),
                (
                    "allowed_users",
                    models.ManyToManyField(
                        blank=True, related_name="%(class)s_admin_users", to="hub_tenant.userprofile"
                    ),
                ),
                (
                    "process",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="hub_tenant.process"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Site",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(db_index=True, default=datetime.datetime(2023, 6, 20, 11, 31, 0, 103469)),
                ),
                ("updated_at", models.DateTimeField(default=datetime.datetime(2023, 6, 20, 11, 31, 0, 103502))),
                ("name", models.CharField(max_length=100)),
                ("address", models.TextField(blank=True, null=True)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("state", models.CharField(blank=True, max_length=100, null=True)),
                ("zipcode", models.CharField(blank=True, max_length=100, null=True)),
                ("country", models.CharField(blank=True, max_length=100, null=True)),
                ("latitude", models.CharField(blank=True, max_length=100, null=True)),
                ("longitude", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "admin_users",
                    models.ManyToManyField(
                        blank=True, related_name="%(class)s_allowed_users", to="hub_tenant.userprofile"
                    ),
                ),
                (
                    "allowed_users",
                    models.ManyToManyField(
                        blank=True, related_name="%(class)s_admin_users", to="hub_tenant.userprofile"
                    ),
                ),
                ("areas", models.ManyToManyField(blank=True, to="hub_tenant.area")),
                (
                    "created_by",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="hub_tenant.userprofile"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Robot",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(db_index=True, default=datetime.datetime(2023, 6, 20, 11, 31, 0, 52038)),
                ),
                ("updated_at", models.DateTimeField(default=datetime.datetime(2023, 6, 20, 11, 31, 0, 52181))),
                ("machine", models.UUIDField(blank=True, null=True)),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "connection",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="hub_tenant.connectioninfo",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="process",
            name="admin_users",
            field=models.ManyToManyField(
                blank=True, related_name="%(class)s_allowed_users", to="hub_tenant.userprofile"
            ),
        ),
        migrations.AddField(
            model_name="process",
            name="allowed_users",
            field=models.ManyToManyField(
                blank=True, related_name="%(class)s_admin_users", to="hub_tenant.userprofile"
            ),
        ),
        migrations.AddField(
            model_name="process",
            name="created_by",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="hub_tenant.userprofile"),
        ),
        migrations.AddField(
            model_name="process",
            name="machine",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="hub_tenant.machine"
            ),
        ),
        migrations.AddField(
            model_name="process",
            name="next_process",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="next_process_instance",
                to="hub_tenant.process",
            ),
        ),
        migrations.AddField(
            model_name="process",
            name="previous_process",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="prev_process_instance",
                to="hub_tenant.process",
            ),
        ),
        migrations.CreateModel(
            name="PLC",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(db_index=True, default=datetime.datetime(2023, 6, 20, 11, 31, 0, 52038)),
                ),
                ("updated_at", models.DateTimeField(default=datetime.datetime(2023, 6, 20, 11, 31, 0, 52181))),
                ("machine", models.UUIDField(blank=True, null=True)),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                ("rack", models.IntegerField(default=0)),
                ("slot", models.IntegerField(default=0)),
                ("timeout", models.IntegerField(default=0)),
                ("connection_protocol", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "connection",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="hub_tenant.connectioninfo",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="machine",
            name="admin_users",
            field=models.ManyToManyField(
                blank=True, related_name="%(class)s_allowed_users", to="hub_tenant.userprofile"
            ),
        ),
        migrations.AddField(
            model_name="machine",
            name="allowed_users",
            field=models.ManyToManyField(
                blank=True, related_name="%(class)s_admin_users", to="hub_tenant.userprofile"
            ),
        ),
        migrations.AddField(
            model_name="machine",
            name="created_by",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="hub_tenant.userprofile"
            ),
        ),
        migrations.AddField(
            model_name="machine",
            name="machine_type_model",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="contenttypes.contenttype"
            ),
        ),
        migrations.CreateModel(
            name="Line",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(db_index=True, default=datetime.datetime(2023, 6, 20, 11, 31, 0, 103469)),
                ),
                ("updated_at", models.DateTimeField(default=datetime.datetime(2023, 6, 20, 11, 31, 0, 103502))),
                ("name", models.CharField(max_length=100)),
                (
                    "admin_users",
                    models.ManyToManyField(
                        blank=True, related_name="%(class)s_allowed_users", to="hub_tenant.userprofile"
                    ),
                ),
                (
                    "allowed_users",
                    models.ManyToManyField(
                        blank=True, related_name="%(class)s_admin_users", to="hub_tenant.userprofile"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="hub_tenant.userprofile"),
                ),
                ("processes", models.ManyToManyField(blank=True, to="hub_tenant.process")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EdgeDevice",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(db_index=True, default=datetime.datetime(2023, 6, 20, 11, 31, 0, 52038)),
                ),
                ("updated_at", models.DateTimeField(default=datetime.datetime(2023, 6, 20, 11, 31, 0, 52181))),
                ("machine", models.UUIDField(blank=True, null=True)),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "connection",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="hub_tenant.connectioninfo",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CNC",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(db_index=True, default=datetime.datetime(2023, 6, 20, 11, 31, 0, 52038)),
                ),
                ("updated_at", models.DateTimeField(default=datetime.datetime(2023, 6, 20, 11, 31, 0, 52181))),
                ("machine", models.UUIDField(blank=True, null=True)),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "connection",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="hub_tenant.connectioninfo",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="area",
            name="admin_users",
            field=models.ManyToManyField(
                blank=True, related_name="%(class)s_allowed_users", to="hub_tenant.userprofile"
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="allowed_users",
            field=models.ManyToManyField(
                blank=True, related_name="%(class)s_admin_users", to="hub_tenant.userprofile"
            ),
        ),
        migrations.AddField(
            model_name="area",
            name="created_by",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="hub_tenant.userprofile"),
        ),
        migrations.AddField(
            model_name="area",
            name="lines",
            field=models.ManyToManyField(blank=True, to="hub_tenant.line"),
        ),
        migrations.CreateModel(
            name="AGV",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(db_index=True, default=datetime.datetime(2023, 6, 20, 11, 31, 0, 52038)),
                ),
                ("updated_at", models.DateTimeField(default=datetime.datetime(2023, 6, 20, 11, 31, 0, 52181))),
                ("machine", models.UUIDField(blank=True, null=True)),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "connection",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="hub_tenant.connectioninfo",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
